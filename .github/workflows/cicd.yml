name: cicd
on: [push, pull_request, workflow_dispatch]
jobs:
  ci:
    strategy: 
      matrix:
        include:
          - os: ubuntu-latest
            nuke: ./build.sh
#          - os: macos-latest
#            nuke: ./build.sh
#          - os: windows-latest
#            nuke: ./build.ps1
        
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          show-progress: false
          fetch-depth: 0
          
      - name: Cache File for CD
        uses: actions/cache@v3
        if: matrix.os == 'ubuntu-latest'
        with:
          path: |
            .nuke/temp
            ~/.nuget/packages
          key: ${{ runner.os }}-${{ hashFiles('**/global.json', '**/*.csproj', '**/Directory.Packages.props') }}

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version:
            6.0.x
            7.0.x

      - name: Build and Test
        run: ${{ matrix.nuke }} Test
        env:
          Configuration: Debug
  cd:
    runs-on: ubuntu-latest
    needs: [ci]
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          show-progress: false
          fetch-depth: 0
          
      - name: Restore Cached CI Files
        uses: actions/cache/restore@v3
        with:
          path: |
            .nuke/temp
            ~/.nuget/packages
          key: ${{ runner.os }}-${{ hashFiles('**/global.json', '**/*.csproj', '**/Directory.Packages.props') }}

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version:
            6.0.x
            7.0.x

      - name: Build and Publish
        run: ./build.sh Publish
        env:
          Configuration: Release
          NuGetApiKey: ${{ secrets.NUGET_API_KEY }}
          
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}